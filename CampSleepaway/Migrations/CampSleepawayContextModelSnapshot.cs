// <auto-generated />
using System;
using CampSleepaway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampSleepaway.Migrations
{
    [DbContext(typeof(CampSleepawayContext))]
    partial class CampSleepawayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampSleepaway.Model.Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabinId"));

                    b.Property<int?>("CouncelorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabinId");

                    b.HasIndex("CouncelorId")
                        .IsUnique()
                        .HasFilter("[CouncelorId] IS NOT NULL");

                    b.ToTable("Cabin");
                });

            modelBuilder.Entity("CampSleepaway.Model.Camper", b =>
                {
                    b.Property<int>("CamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamperId"));

                    b.Property<int?>("CabinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CamperId");

                    b.HasIndex("CabinId");

                    b.ToTable("Camper");
                });

            modelBuilder.Entity("CampSleepaway.Model.CamperNextOfKin", b =>
                {
                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<int>("NextOfKinId")
                        .HasColumnType("int");

                    b.HasKey("CamperId", "NextOfKinId");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("CamperNextOfKins");
                });

            modelBuilder.Entity("CampSleepaway.Model.Councelor", b =>
                {
                    b.Property<int>("CouncelorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouncelorId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FavoriteNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouncelorId");

                    b.ToTable("Councelor");
                });

            modelBuilder.Entity("CampSleepaway.Model.NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NextOfKinId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelationType")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("NextOfKinId");

                    b.HasIndex("VisitId");

                    b.ToTable("NextOfKin");
                });

            modelBuilder.Entity("CampSleepaway.Model.Visit", b =>
                {
                    b.Property<int?>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("VisitId"));

                    b.Property<int?>("CamperId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("VisitId");

                    b.HasIndex("CamperId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("CampSleepaway.Model.Cabin", b =>
                {
                    b.HasOne("CampSleepaway.Model.Councelor", "Councelor")
                        .WithOne("Cabin")
                        .HasForeignKey("CampSleepaway.Model.Cabin", "CouncelorId");

                    b.Navigation("Councelor");
                });

            modelBuilder.Entity("CampSleepaway.Model.Camper", b =>
                {
                    b.HasOne("CampSleepaway.Model.Cabin", "Cabin")
                        .WithMany("Campers")
                        .HasForeignKey("CabinId");

                    b.Navigation("Cabin");
                });

            modelBuilder.Entity("CampSleepaway.Model.CamperNextOfKin", b =>
                {
                    b.HasOne("CampSleepaway.Model.Camper", "Camper")
                        .WithMany()
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepaway.Model.NextOfKin", "NextOfKin")
                        .WithMany()
                        .HasForeignKey("NextOfKinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camper");

                    b.Navigation("NextOfKin");
                });

            modelBuilder.Entity("CampSleepaway.Model.NextOfKin", b =>
                {
                    b.HasOne("CampSleepaway.Model.Visit", "Visit")
                        .WithMany("Visitors")
                        .HasForeignKey("VisitId");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("CampSleepaway.Model.Visit", b =>
                {
                    b.HasOne("CampSleepaway.Model.Camper", "Camper")
                        .WithMany("Visit")
                        .HasForeignKey("CamperId");

                    b.Navigation("Camper");
                });

            modelBuilder.Entity("CampSleepaway.Model.Cabin", b =>
                {
                    b.Navigation("Campers");
                });

            modelBuilder.Entity("CampSleepaway.Model.Camper", b =>
                {
                    b.Navigation("Visit");
                });

            modelBuilder.Entity("CampSleepaway.Model.Councelor", b =>
                {
                    b.Navigation("Cabin")
                        .IsRequired();
                });

            modelBuilder.Entity("CampSleepaway.Model.Visit", b =>
                {
                    b.Navigation("Visitors");
                });
#pragma warning restore 612, 618
        }
    }
}
